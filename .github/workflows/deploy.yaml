name: Deploy to AWS

on:
  workflow_dispatch:
  push:
    branches:
      - master  # Adjust to the branch you want to trigger the deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache Rust and Zig dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Zig toolchain
        uses: korandoru/setup-zig@v1
        with:
          zig-version: 0.10.0

      - name: Cache Cargo Lambda dependency
        uses: actions/cache@v2
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-cargo-lambda-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-lambda-

      - name: Install Cargo Lambda
        run: cargo install cargo-lambda

      - name: Install arm64 target
        run: rustup target add aarch64-unknown-linux-gnu

      - name: Cache Python, AWS CLI, and SAM CLI
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: ${{ runner.os }}-python-aws-sam-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-aws-sam-

      - name: Set up Python 3.10
        run: |
          sudo apt-get update
          sudo apt-get install python3

      - name: Install AWS CLI and SAM CLI
        run: |
          pip install awscli
          pip install aws-sam-cli

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Compile Rust Code
        run: cargo lambda build --release --output-format zip --arm64

      - name: Package SAM application
        run: sam package --template-file template.yaml --output-template-file packaged.yaml --s3-bucket interphlix-code

      - name: Deploy SAM application
        run: sam deploy --template-file packaged.yaml --stack-name interphlix
